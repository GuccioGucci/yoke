#!/usr/bin/env bash

CURRENT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" >/dev/null 2>&1 && pwd )"
LIB_DIR="${CURRENT_DIR}/../lib"

function fail() {
    local message="$*"
    echo "$message" ; exit 1
}

function install_ecs_deploy() {
    local version="$1"
    local repo="GuccioGucci/ecs-deploy"
    
    local target=$LIB_DIR/ecs-deploy-$version
    local artifact=$target/ecs-deploy

    [[ -d $target ]] || {
        echo "Installing $repo $version"
    
        ( cd $LIB_DIR ; curl -s -L "https://github.com/$repo/archive/refs/tags/$version.tar.gz" | tar -xz )
        [[ -f $artifact ]] || fail "Could not install $artifact"
        chmod +x $artifact
        ln -s -f $artifact $LIB_DIR/bin/ecs-deploy
    }
}

function install_gucci() {
    local version="$1"
    local repo="noqcks/gucci"
    
    local target=$LIB_DIR/gucci-$version
    local artifact=""
    
    [[ -d $target ]] || {
        OS_LABEL=$( uname -s | tr '[:upper:]' '[:lower:]' )
        if [[ $OS_LABEL =~ "_nt" ]]; then
            artifact="gucci-v$version-windows-amd64.exe"
        else
            artifact="gucci-v$version-$OS_LABEL-amd64"
        fi
    
        echo "Installing $repo $version ($artifact)"

        mkdir -p $target
        ( cd $target ; curl "https://github.com/$repo/releases/download/$version/$artifact" -s -L -o $artifact )
        [[ -f $target/$artifact ]] || fail "Could not update $target"
        chmod +x $target/$artifact
        ln -s -f $target/$artifact $LIB_DIR/bin/gucci
    }
}

function install_repo() {
    local repo="$1"
    local name="$( echo $repo | cut -d "/" -f 2 )"
    [[ -d $LIB_DIR/$name ]] || {
        echo "Installing $name ($repo)"
        git clone --quiet --depth 1 "https://github.com/$repo.git" $LIB_DIR/$name
    }
}

# required dependencies

command -v "aws" > /dev/null 2>&1 || fail "Please, install aws (version 2)"
command -v "jq" > /dev/null 2>&1 || fail "Please, install jq"
command -v "realpath" > /dev/null 2>&1 || fail "Please, install coreutils"
command -v "curl" > /dev/null 2>&1 || fail "Please, install curl"
command -v "git" > /dev/null 2>&1 || fail "Please, install git"

# prepare bin folder
mkdir -p $LIB_DIR/bin > /dev/null 2>&1

# application tools
install_ecs_deploy 3.10.3
install_gucci 1.5.2

# test libraries
install_repo sstephenson/bats
install_repo ztombol/bats-assert
install_repo ztombol/bats-support