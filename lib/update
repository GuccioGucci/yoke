#!/usr/bin/env bash

CURRENT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" >/dev/null 2>&1 && pwd )"
VENDOR="$CURRENT_DIR/vendor"

function fail() {
    local message="$*"
    echo "$message" ; exit 1
}

# required dependencies

command -v "aws" > /dev/null 2>&1 || fail "Please, install aws (version 2)"
command -v "jq" > /dev/null 2>&1 || fail "Please, install jq"
command -v "realpath" > /dev/null 2>&1 || fail "Please, install coreutils"
command -v "curl" > /dev/null 2>&1 || fail "Please, install curl"
command -v "git" > /dev/null 2>&1 || fail "Please, install git"

# application tools

[[ -d $CURRENT_DIR/ecs-deploy ]] || {
    ECS_DEPLOY_REPO="GuccioGucci/ecs-deploy"
    
    echo "Updating ecs-deploy ($ECS_DEPLOY_REPO)"
    
    git clone --quiet --depth 1 "https://github.com/$ECS_DEPLOY_REPO.git" $CURRENT_DIR/ecs-deploy
    [[ -f $CURRENT_DIR/ecs-deploy/ecs-deploy ]] || fail "Could not update $CURRENT_DIR/ecs-deploy/ecs-deploy"
    chmod +x $CURRENT_DIR/ecs-deploy/ecs-deploy
}

[[ -d $CURRENT_DIR/gucci ]] || {
    GUCCI_VERSION="1.4.0"
    OS_LABEL=$( uname -s | tr '[:upper:]' '[:lower:]' )
    if [[ $OS_LABEL =~ "_nt" ]]; then
        GUCCI_ARTIFACT="gucci-v$GUCCI_VERSION-windows-amd64.exe"
    else
        GUCCI_ARTIFACT="gucci-v$GUCCI_VERSION-$OS_LABEL-amd64"
    fi
    
    echo "Updating gucci ($GUCCI_ARTIFACT)"

    mkdir -p $CURRENT_DIR/gucci
    curl "https://github.com/noqcks/gucci/releases/download/$GUCCI_VERSION/$GUCCI_ARTIFACT" -s -L -o $CURRENT_DIR/gucci/gucci
    [[ -f $CURRENT_DIR/gucci/gucci ]] || fail "Could not update $CURRENT_DIR/gucci/gucci"
    chmod +x $CURRENT_DIR/gucci/gucci
}

# test libraries

[[ -d $CURRENT_DIR/bats ]] || {
    BATS_REPO="sstephenson/bats"
    echo "Updating bats ($BATS_REPO)"
    git clone --quiet --depth 1 "https://github.com/$BATS_REPO.git" $CURRENT_DIR/bats
}

[[ -d $CURRENT_DIR/bats-assert ]] || {
    BATS_ASSERT_REPO="ztombol/bats-assert"
    echo "Updating bats-assert ($BATS_ASSERT_REPO)"
    git clone --quiet --depth 1 "https://github.com/$BATS_ASSERT_REPO.git" $CURRENT_DIR/bats-assert
}

[[ -d $CURRENT_DIR/bats-support ]] || {
    BATS_SUPPORT_REPO="ztombol/bats-support"
    echo "Updating bats-support ($BATS_SUPPORT_REPO)"
    git clone --quiet --depth 1 "https://github.com/$BATS_SUPPORT_REPO.git" $CURRENT_DIR/bats-support
}